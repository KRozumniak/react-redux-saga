{"version":3,"sources":["redux/types.js","redux/action.js","Components/Alert.js","Components/PostForm.js","Components/Post.js","Components/Posts.js","Components/Loader.js","Components/FetchedPosts.js","App.js","reportWebVitals.js","redux/postsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/middleware.js","redux/sagas.js","index.js"],"names":["CREATE_POST","FETCH_POSTS","REQUEST_POSTS","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","hideLoader","type","showAlert","text","dispatch","payload","setTimeout","Alert","className","role","PostForm","props","submitHandler","event","preventDefault","title","state","trim","newPost","id","Date","now","toString","createPost","setState","changeInputHandler","prev","target","name","value","onSubmit","this","alert","htmlFor","onChange","React","Component","mapDispatchToProps","post","connect","app","Post","syncPosts","posts","length","map","Loader","FetchedPosts","useDispatch","useSelector","fetchedPosts","loading","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","forbidden","sagaWatcher","sagaWorker","takeEvery","put","call","fetchPosts","a","fetch","response","json","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","thunk","next","filter","w","includes","window","__REDUX_DEVTOOLS_EXTENSION__","run","StrictMode","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ebc8697.chunk.js","sourcesContent":["export const CREATE_POST = 'POST/CREATE_POST'\r\nexport const FETCH_POSTS = 'POST/FETCH_POSTS'\r\nexport const REQUEST_POSTS = 'POST/REQUEST_POSTS'\r\nexport const SHOW_LOADER = 'APP/SHOW_LOADER'\r\nexport const HIDE_LOADER = 'APP/HIDE_LOADER'\r\nexport const SHOW_ALERT = 'APP/SHOW_ALERT'\r\nexport const HIDE_ALERT = 'APP/HIDE_ALERT'","import {CREATE_POST, HIDE_ALERT, HIDE_LOADER, REQUEST_POSTS, SHOW_ALERT, SHOW_LOADER} from \"./types\";\r\n\r\nexport function createPost(post) {\r\n  return {\r\n    type: CREATE_POST,\r\n    payload: post\r\n  }\r\n}\r\n\r\nexport function showLoader() {\r\n  return {\r\n    type: SHOW_LOADER\r\n  }\r\n}\r\n\r\nexport function hideLoader() {\r\n  return {\r\n    type: HIDE_LOADER\r\n  }\r\n}\r\n\r\nexport function showAlert(text) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: text\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch(hideAlert())\r\n    }, 3000)\r\n  }\r\n}\r\n\r\nexport function hideAlert() {\r\n  return {\r\n    type: HIDE_ALERT\r\n  }\r\n}\r\n\r\nexport function fetchPosts() {\r\n  return {\r\n    type: REQUEST_POSTS\r\n  }\r\n  // return async dispatch => {\r\n  //   try {\r\n  //     dispatch(showLoader())\r\n  //     const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5')\r\n  //     const json = await response.json()\r\n  //     setTimeout( () => {\r\n  //       dispatch({ type: FETCH_POSTS, payload: json})\r\n  //       dispatch(hideLoader())\r\n  //     }, 1100)\r\n  //   } catch (e) {\r\n  //     dispatch(showAlert('Something went wrong'))\r\n  //     dispatch(hideLoader())\r\n  //   }\r\n  //\r\n  // }\r\n}","export const Alert = ({ text }) => (\r\n    <div className=\"alert alert-warning\" role=\"alert\">\r\n      {text}\r\n    </div>\r\n  )","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {createPost, showAlert} from \"../redux/action\";\r\nimport {Alert} from \"./Alert\";\r\n\r\nclass PostForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: ''\r\n    }\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n    const {title} = this.state;\r\n\r\n    if (!title.trim()) {\r\n      return this.props.showAlert(`Post's name cannot be empty`)\r\n    }\r\n\r\n    const newPost = {\r\n      title, id: Date.now().toString()\r\n    }\r\n\r\n    this.props.createPost(newPost)\r\n    this.setState({title: ''})\r\n  }\r\n\r\n  changeInputHandler = event => {\r\n    this.setState(prev => ({...prev, ...{[event.target.name]: event.target.value\r\n      }}))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitHandler}>\r\n\r\n        {this.props.alert && <Alert text={this.props.alert}/>}\r\n\r\n        <div className=\"mb-3\">\r\n          <label\r\n            htmlFor=\"title\"\r\n            className=\"form-label\">\r\n            Post title\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            value={this.state.title}\r\n            name='title'\r\n            onChange={this.changeInputHandler}\r\n          />\r\n        </div>\r\n        <button className='btn btn-success' type='submit'>Create</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\nconst stateToProps = state => ({\r\n  alert: state.app.alert\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  createPost, showAlert\r\n}\r\n\r\nexport default connect(stateToProps, mapDispatchToProps)(PostForm);","export default function Post({post}) {\r\n  return (\r\n    <div className='card'>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{post.title}</h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import Post from \"./Post\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Posts({syncPosts}) {\r\n  if (!syncPosts.length) {\r\n    return <p className='text-center'>No posts yet</p>\r\n  }\r\n  return syncPosts.map(post => <Post post={post} key={post.id}/>)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    syncPosts: state.posts.posts,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Posts);","export const Loader = () => (\r\n  <div className=\"spinner-border text-danger\" role=\"status\">\r\n    <span className=\"visually-hidden\">Loading...</span>\r\n  </div>\r\n)\r\n","import Post from \"./Post\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchPosts} from \"../redux/action\";\r\nimport {Loader} from \"./Loader\";\r\n\r\n\r\nexport default function FetchedPosts() {\r\n  const dispatch = useDispatch()\r\n  const posts = useSelector(state => state.posts.fetchedPosts)\r\n  const loading = useSelector(state => state.app.loading)\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  if (!posts.length) {\r\n    return <button\r\n      className='btn btn-primary'\r\n      onClick={() => dispatch(fetchPosts())}\r\n    >Load</button>\r\n  }\r\n  return posts.map(post => <Post post={post} key={post.id}/>)\r\n}","import PostForm from \"./Components/PostForm\";\nimport Posts from \"./Components/Posts\";\nimport FetchedPosts from \"./Components/FetchedPosts\";\n\nfunction App() {\n  return (\n      <div className=\"container pt-3\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <PostForm />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h2>Sync Posts</h2>\n            <Posts />\n          </div>\n          <div className=\"col\">\n            <h2>Async Posts</h2>\n            <FetchedPosts />\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CREATE_POST, FETCH_POSTS} from \"./types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  fetchedPosts: [],\r\n}\r\n\r\n// Pure Functions\r\nexport const postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_POST:\r\n      return { ...state, posts: [...state.posts, action.payload]};\r\n    case FETCH_POSTS:\r\n      return {...state, fetchedPosts: action.payload}\r\n    default: return state;\r\n  }\r\n}","import {HIDE_ALERT, HIDE_LOADER, SHOW_ALERT, SHOW_LOADER} from \"./types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  alert: null\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return {...state, loading: true}\r\n    case HIDE_LOADER:\r\n      return {...state, loading: false}\r\n    case SHOW_ALERT:\r\n      return {...state, alert: action.payload}\r\n    case HIDE_ALERT:\r\n      return {...state, alert: null}\r\n    default: return state\r\n  }\r\n}","import {combineReducers} from \"redux\";\r\nimport {postsReducer} from \"./postsReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  app: appReducer\r\n})","import {CREATE_POST} from \"./types\";\r\nimport {showAlert} from \"./action\";\r\n\r\nconst forbidden = ['fuck', 'spam', 'php']\r\n\r\nexport function forbiddenWordsMiddleware({ dispatch }) {\r\n  return function(next) {\r\n    return function (action) {\r\n      if (action.type === CREATE_POST) {\r\n        const found = forbidden.filter(w => action.payload.title.includes(w))\r\n        if (found.length) {\r\n          return dispatch(showAlert(`Don't litter`))\r\n        }\r\n      }\r\n      return next(action)\r\n    }\r\n  }\r\n}","import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {FETCH_POSTS, REQUEST_POSTS} from \"./types\";\r\nimport {hideLoader, showAlert, showLoader} from \"./action\";\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(REQUEST_POSTS, sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  try {\r\n    yield put(showLoader())\r\n    const payload = yield call(fetchPosts)\r\n    yield put({type: FETCH_POSTS, payload})\r\n    yield put(hideLoader())\r\n  } catch (e) {\r\n    yield put(showAlert('Something went wrong'))\r\n    yield put(hideLoader())\r\n  }\r\n}\r\n\r\nasync function fetchPosts() {\r\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5')\r\n  return await response.json()\r\n}","import React from 'react';\nimport {render} from 'react-dom';\nimport {compose, createStore, applyMiddleware} from \"redux\";\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {rootReducer} from \"./redux/rootReducer\";\nimport {forbiddenWordsMiddleware} from \"./redux/middleware\";\nimport {sagaWatcher} from \"./redux/sagas\";\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk,\n    forbiddenWordsMiddleware,\n    saga\n  ),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nsaga.run(sagaWatcher)\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>\n\n)\n\nrender(app, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}